name: Publish

on:
  workflow_dispatch:
    inputs:
      is_latest:
        description: 'Publish with latest tag'
        required: true
        default: false
        type: boolean
  push:
    branches:
      - 'master'
    paths:
      - 'package.json'

env:
  REGISTRY_IMAGE: ghcr.io/${{ github.repository_owner }}/aira
  DEVELOP_BRANCH_NAME: dev

jobs:
  create-tag:
    name: Create tag
    runs-on: ubuntu-latest
    outputs:
      exists: ${{ steps.check-tag.outputs.exists }}
      version: ${{ steps.package-version.outputs.current-version }}
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0

      - name: get package version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      - name: check tag exists
        uses: mukunku/tag-exists-action@v1.4.0
        id: check-tag
        with:
          tag: v${{ steps.package-version.outputs.current-version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: create tag
        if: steps.check-tag.outputs.exists == 'false'
        run: |
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"
          git tag -a v${{ steps.package-version.outputs.current-version }} -m "release: v${{ steps.package-version.outputs.current-version }}"
          git push origin v${{ steps.package-version.outputs.current-version }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs:
      - create-tag
    if: github.repository_owner == 'hideki0403' && (github.event_name == 'workflow_dispatch' || needs.create-tag.outputs.exists == 'false')
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Check out the repo
        uses: actions/checkout@v4.1.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push to GitHub Container Registry
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: ${{ matrix.platform }}
          provenance: false
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    name: Merge
    runs-on: ubuntu-latest
    needs:
      - create-tag
      - build
    steps:
      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            type=raw,value=edge,enable=${{ contains(github.ref_name, env.DEVELOP_BRANCH_NAME) }}
            type=raw,value=latest,enable=${{ !contains(github.ref_name, env.DEVELOP_BRANCH_NAME) && (github.event_name == 'push' || github.event.inputs.is_latest) }}
            type=raw,value=v${{ needs.create-tag.outputs.version }}

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
